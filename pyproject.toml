[project]
name = "dr-util"
version = "0.1.0"
description = "Add your description here"
dependencies = [
    "loguru>=0.7.2",
    "numpy>=1.26.4",
    "jsonlines>=4.0.0",
    "omegaconf>=2.3.0",
    "boto3>=1.35.20",
    "hydra-core==1.3",
]
readme = "README.md"
requires-python = ">= 3.8"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=8.1.1",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/dr_util"]

[tool.ruff]
line-length = 88

[tool.ruff.lint]
extend-select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "A",    # flake8-builtins
    "FBT",  # flake8-boolean-trap
    "COM",  # flake8-commas
    "C4",   # flake8-comprehensions
    "T10",  # flake8-debugger
    "EXE",  # flake8-executable
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "LOG",  # flake8-logging
    "INP",  # flake8-no-pep420
    "PIE",  # flake8-pie
    "T20",  # flake8-print
    "PYI",  # flake8-pyi
    "PT",   # flake8-pytest-style
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "SLF",  # flake8-self
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "INT",  # flake8-gettext
    "ARG",  # flake8-nused-arguments
    "PTH",  # flake8-use-pathlib
    "TD",   # flake8-todos
    "FIX",  # flake8-fixme
    "ERA",  # eradicate
    "PD",   # pandas-vet
    "PL",   # pylint
    "TRY",  # tryceratops
    "FLY",  # flynt
    "NPY",  # numpy
    "PERF", # perflint
    "RUF",  # ruff specific
    #"D",    # pydocstyle
    #"TCH",  # flake8-type-checking
    #"ANN",  # flake8-annotations 
]
ignore = [
    "COM812", # ignoring both based on conflict
    "ISC001",
    "TD002", # include author name with todo
    "TD003", # link to issue after todo
    "FIX002", # throws on all TODOs
]


[tool.ruff.lint.pydocstyle]
convention = "google"  # Accepts: "google", "numpy", or "pep257".
